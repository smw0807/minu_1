리팩터링 원칙

리팩터링의 명사적 의미
소프트웨어의 겉보기 동작은 그대로 유지한 채, 코드를 이해하고 수정하기 쉽도록 내부 구조를 변경하는 기법
(함수 추출하기, 조번부 로직들 다형성으로 바꾸기)

리팩터링의 동사적 의미
소프트웨어의 겉보기 동작은 그대로 유지한 채, 여러 가지 리팩터링 기법을 적용해서 소프트웨어를 재구성

리팩터링을 하는 이유
- 소프트웨어 설계가 좋아진다.
- 소프트웨어를 이해하기 쉬워진다.
- 버그를 쉽게 찾을 수 있다.
- 프로그래밍 속도를 높일 수 있다.

돈 로버츠가 제시한 리팩터링을 해야할 3원칙
1. 처음에는 그냥 한다.
2. 비슷한 일을 두 번쨰로 하게 되면, 일단 계속 진행한다.
3. 비슷한 일을 세 번째 하게 되면 리팩터링 한다.
삼진 리팩터링

리팩터링의 궁극적인 목적은 개발 속도를 높여서, 더 적은 노력으로 많은 가치를 창출하는 것
리팩터링의 본질은 코드베이스를 예쁘게 꾸미는 것이 아닌 경제적인 이유로 하는 것
리팩터링은 개발 기간을 단축하고자 하는 것 (기능 추가 시간을 줄이고, 버그 수정 시간을 줄여준다.)