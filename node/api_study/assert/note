Assert는 유닛 테스트를 위해서 노드에서 사용할 수 있는 테스트 모듈.
별도의 설치없이도 import하면 바로 사용할 수 있다.

유닛 테스트는 특정 모듈이 예상한 대로 돌아가는 지 검증을 하는 것이 목표이다.
assert는 그 자체가 테스트용 함수이기도 하다.

assertion.ok(object)인자값이 true가 아니면 에러
assertion.ifError(object)인자값이 false가 아니면 에러
assertion.equal(object, object) 두 개의 인자를 == 으로 비교 
assertion.notEqual(object, object)두 개의 인자를 != 으로 비교
assertion.staticEqual(object, object)두 개의 인자를 === 으로 비교
assertion.notStaticEqual(object, object)두 개의 인자를 !== 으로 비교
assertion.deepEqual(object, object)객체를 그냥 equal 하게 되면 객체를 참조하고 있는 주소가 
서로 다르기 때문에 무조건 false가 나온다. 그래서 해당 객체의 속성값을 == 으로 비교해주는 메소드
assertion.notDeepEqual(object, object)deepEqual 메소드를 != 으로 비교하는 메서드
assertion.deepStrictEqual() deepEqual 메소드를 === 으로 비교하는 메서드
assertion.notDeepStrictEqual() deepEqual 메소드를 !== 으로 비교하는 메서드
assertion.throws(() => new Error(‘에러’), TypeError) 인자로 넘어온 값이 함수이면서, 반환값이 에러인경우 ( 두 번째 인자는 오류의 유형인데 option)
assertion.doesNotThrow(() => new Error(‘에러’), TypeError)인자로 넘어온 값이 함수이면서, 반환값이 에러가 아닌 경우 ( 두 번째 인자는 오류의 유형인데 option)
assertion.fail() 무조건 실패

출처: https://wedul.site/481 [wedul]